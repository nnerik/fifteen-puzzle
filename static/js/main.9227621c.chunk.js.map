{"version":3,"sources":["fifteen.js","Board.js","Topbar.js","App.js","serviceWorker.js","index.js"],"names":["solvedBoard","width","height","state","concat","Array","keys","distance","a","b","Math","abs","isMoveable","board","tile","manhattan","map","pos","index","reduce","prev","cur","permuteEven","arr","length","newArray","parity","i","randomIndex","trunc","random","temp","moveTile","newState","increasing","rest","partition","list","n","acc","slice","push","pqueue","node","score","parent","pop","getSolution","start","heuristic","matrix","tiles","row","filter","value","seq","_","reversals","queue","nodes","gScore","hScore","from","saveNode","fromNode","fScore","reconstructPath","goal","path","findIndex","console","log","neighbors","blank","current","neighbor","Tile","props","className","solved","x","size","y","viewBox","moveable","x0","y0","onClick","handler","undefined","style","strokeWidth","rx","ry","textAnchor","alignmentBaseline","Board","boardStroke","frameWidth","gameState","tileSize","fillOpacity","key","prevBoard","useStyles","makeStyles","theme","root","flexGrow","title","settings","border","padding","spacing","backgroundColor","palette","background","paper","Topbar","classes","useState","anchorEl","setAnchorEl","open","Boolean","id","AppBar","position","Toolbar","Typography","variant","moves","ClickAwayListener","onClickAway","event","IconButton","color","currentTarget","Settings","Popper","gutterBottom","Slider","onChange","resize","aria-labelledby","valueLabelDisplay","step","marks","min","max","App","setGameState","createMuiTheme","type","primary","cyan","secondary","main","typography","fontFamily","solutionReducer","ThemeProvider","CssBaseline","newBoard","Container","Box","m","ButtonGroup","Button","shuffledBoard","solution","alert","forEach","setTimeout","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9227621c.chunk.js","sourcesContent":["// Create a solved board of size width x height.\nexport const solvedBoard = (width, height) => {\n  return {\n    width: width,\n    height: height,\n    state: [width * height - 1].concat([...Array(width * height - 1).keys()])\n  };\n};\n\nconst distance = (a, b, width) =>\n  Math.abs(((a / width) | 0) - ((b / width) | 0)) +\n  Math.abs((a % width) - (b % width));\n\nexport const isMoveable = (board, tile) =>\n  distance(board.state[tile], board.state[0], board.width) === 1;\n\nconst manhattan = board => {\n  const [_, ...tiles] = board.state;\n  return tiles\n    .map((pos, index) => distance(pos, index, board.width))\n    .reduce((prev = 0, cur) => prev + cur);\n};\n\nexport const isSolved = board => manhattan(board) === 0;\n\n// Randomly shuffle the elements of an array in an even permutation.\nconst permuteEven = arr => {\n  if (arr.length < 3) return arr;\n  else {\n    const newArray = [...arr];\n    let parity = 0;\n    for (let i = 0; i < arr.length - 2; i++) {\n      const randomIndex = Math.trunc(Math.random() * (arr.length - i));\n      if (randomIndex > 0) {\n        const temp = newArray[i];\n        newArray[i] = newArray[i + randomIndex];\n        newArray[i + randomIndex] = temp;\n        parity += 1;\n      }\n    }\n    if (parity % 2 > 0) {\n      const temp = newArray[arr.length - 2];\n      newArray[arr.length - 2] = newArray[arr.length - 1];\n      newArray[arr.length - 1] = temp;\n    }\n    return newArray;\n  }\n};\n\n// Create a new shuffled board of size width x height.\nexport const newBoard = (width, height) => {\n  return {\n    width: width,\n    height: height,\n    state: [width * height - 1].concat(\n      permuteEven([...Array(width * height - 1).keys()])\n    )\n  };\n};\n\nexport const moveTile = (board, tile) => {\n  const newState = [...board.state];\n  newState[0] = board.state[tile];\n  newState[tile] = board.state[0];\n  return { width: board.width, height: board.height, state: newState };\n};\n\n/*\n * Helper functions\n */\n\nconst increasing = ([prev, ...rest]) => {\n  if (rest.length === 0) return true;\n  if (prev > rest[0]) return false;\n  return increasing(rest);\n};\n\nconst partition = (list, n, acc = []) => {\n  if (list.length <= n) return acc.concat([list]);\n  return partition(list.slice(n), n, acc.concat([list.slice(0, n)]));\n};\n\nconst transpose = matrix => matrix[0].map((_, i) => matrix.map(row => row[i]));\n\nconst reversals = board => {\n  const [_, ...tiles] = board.state;\n  return (\n    partition(tiles, board.width)\n      .map((row, index) =>\n        row.filter(value => Math.trunc(value / board.width) === index)\n      )\n      .filter(seq => !increasing(seq)).length +\n    transpose(partition(tiles, board.width))\n      .map((row, index) => row.filter(value => value % board.width === index))\n      .filter(seq => !increasing(seq)).length\n  );\n};\n\n/*\n * Prority queue implementation\n */\n\nconst isEmpty = pqueue => pqueue.length === 0;\n\nconst push = (pqueue, node, score) => {\n  let index = pqueue.length;\n  let parent = Math.trunc((index - 1) / 2);\n\n  pqueue.push({ node: node, score: score });\n\n  while (index > 0 && pqueue[index].score > pqueue[parent].score) {\n    const temp = pqueue[index];\n    pqueue[index] = pqueue[parent];\n    pqueue[parent] = temp;\n    index = parent;\n    parent = Math.trunc((index - 1) / 2);\n  }\n};\n\nconst pop = pqueue => pqueue.pop();\n\n/*\n * Find shortest solution using A*.\n */\n\nexport const getSolution = start => {\n  // Define the heuristic to be applied\n  const heuristic = node => manhattan(node) + 2 * reversals(node);\n\n  // We need a priority queue for the A* algorithm\n  let queue = [];\n  push(queue, start, heuristic(start));\n\n  // We also need a database for visited nodes\n  let nodes = {};\n  nodes[start.state] = {\n    gScore: 0,\n    hScore: heuristic(start),\n    from: null\n  };\n\n  const saveNode = (node, fromNode) => {\n    const gScore = nodes[fromNode.state].gScore + 1;\n    const hScore = heuristic(node);\n    nodes[node.state] = {\n      gScore: gScore,\n      hScore: hScore,\n      from: fromNode\n    };\n  };\n\n  const gScore = node => nodes[node.state].gScore;\n  const hScore = node => nodes[node.state].hScore;\n  const fScore = node => gScore(node) + hScore(node);\n  const fromNode = node => nodes[node.state].from;\n  const isVisited = node => node.state in nodes;\n\n  // Return list of moves for the shortest path to the goal\n  const reconstructPath = goal => {\n    let path = [];\n    let node = goal;\n    while (fromNode(node) != null) {\n      const tile = fromNode(node).state.findIndex(pos => pos === node.state[0]);\n      path = [tile, ...path];\n      node = fromNode(node);\n    }\n    console.log(path);\n    return path;\n  };\n\n  // Return list of neigboring boards\n  const neighbors = board => {\n    const [blank, ...tiles] = board.state;\n    return tiles\n      .map((pos, index) =>\n        distance(blank, pos, board.width) === 1 ? index + 1 : 0\n      )\n      .filter(tile => tile > 0)\n      .map(tile => moveTile(board, tile));\n  };\n\n  // Main A* loop\n  while (!isEmpty(queue)) {\n    const current = pop(queue).node;\n    if (hScore(current) === 0) {\n      return reconstructPath(current);\n    }\n\n    for (const neighbor of neighbors(current)) {\n      if (!isVisited(neighbor) || gScore(current) + 1 < gScore(neighbor)) {\n        saveNode(neighbor, current);\n        push(queue, neighbor, fScore(neighbor));\n      }\n    }\n  }\n\n  return [];\n};\n","import React from \"react\";\nimport \"./Board.css\";\nimport { isMoveable, isSolved } from \"./fifteen\";\n\nconst Tile = props => {\n  if (props.index === 0) return null;\n  return (\n    <svg\n      className={props.solved ? \"Solved\" : \"Unsolved\"}\n      x={(props.x - 1) * props.size}\n      y={(props.y - 1) * props.size}\n      height={props.size * 3}\n      width={props.size * 3}\n      viewBox=\"0 0 300 300\"\n    >\n      <g\n        className={\n          props.moveable\n            ? props.x < props.x0\n              ? \"Clickable Left\"\n              : props.x > props.x0\n              ? \"Clickable Right\"\n              : props.y < props.y0\n              ? \"Clickable Up\"\n              : props.y > props.y0\n              ? \"Clickable Down\"\n              : \"Clickable\"\n            : props.x < props.x0\n            ? \"Left\"\n            : props.x > props.x0\n            ? \"Right\"\n            : props.y < props.y0\n            ? \"Up\"\n            : props.y > props.y0\n            ? \"Down\"\n            : \"Still\"\n        }\n        onClick={props.moveable ? () => props.handler(props.index) : undefined}\n      >\n        <rect\n          className=\"Tile\"\n          style={{\n            strokeWidth: 2\n          }}\n          x={102}\n          y={102}\n          rx={3}\n          ry={3}\n          width={96}\n          height={96}\n        ></rect>\n        <text\n          className=\"TileText\"\n          textAnchor=\"middle\"\n          alignmentBaseline=\"central\"\n          x={150}\n          y={150}\n        >\n          {props.index}\n        </text>\n      </g>\n    </svg>\n  );\n};\n\nexport const Board = props => {\n  const boardStroke = props.frameWidth;\n  const solved = isSolved(props.gameState.board);\n\n  return (\n    <svg\n      className=\"Board\"\n      viewBox={`0 0 ${props.tileSize * props.gameState.board.width +\n        2 * boardStroke} ${props.tileSize * props.gameState.board.height +\n        2 * boardStroke}`}\n    >\n      <rect\n        className=\"Frame\"\n        style={{\n          strokeWidth: boardStroke\n        }}\n        x={boardStroke / 2}\n        y={boardStroke / 2}\n        rx={3}\n        ry={3}\n        width={props.tileSize * props.gameState.board.width + boardStroke}\n        height={props.tileSize * props.gameState.board.height + boardStroke}\n        fillOpacity={0}\n      />\n      <svg\n        x={boardStroke}\n        y={boardStroke}\n        width={props.tileSize * props.gameState.board.width}\n        height={props.tileSize * props.gameState.board.height}\n      >\n        {props.gameState.board.state.map((tile, index) => {\n          return (\n            <Tile\n              key={index}\n              size={props.tileSize}\n              x={tile % props.gameState.board.width}\n              y={(tile / props.gameState.board.width) | 0}\n              x0={\n                props.gameState.prevBoard.state[index] %\n                props.gameState.board.width\n              }\n              y0={\n                (props.gameState.prevBoard.state[index] /\n                  props.gameState.board.width) |\n                0\n              }\n              index={index}\n              solved={solved}\n              moveable={!solved && isMoveable(props.gameState.board, index)}\n              handler={props.handler}\n            />\n          );\n        })}\n      </svg>\n    </svg>\n  );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Popper,\n  Slider,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons/\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  settings: {\n    width: 300,\n\n    border: \"1px solid\",\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport const Topbar = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const handleClickAway = event => {\n    setAnchorEl(null);\n  };\n\n  const handleRows = (_, value) => {\n    props.resize(props.gameState.board.width, value);\n  };\n\n  const handleColumns = (_, value) => {\n    props.resize(value, props.gameState.board.height);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"settings\" : undefined;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Moves: {props.gameState.moves}\n          </Typography>\n          <ClickAwayListener onClickAway={handleClickAway}>\n            <IconButton color=\"inherit\" onClick={handleClick}>\n              <Settings />\n            </IconButton>\n          </ClickAwayListener>\n        </Toolbar>\n      </AppBar>\n      <Popper id={id} open={open} anchorEl={anchorEl}>\n        <div className={classes.settings}>\n          <Typography gutterBottom>Rows</Typography>\n          <Slider\n            value={props.gameState.board.height}\n            onChange={handleRows}\n            aria-labelledby=\"rows-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            marks\n            min={2}\n            max={6}\n          />\n          <Typography gutterBottom>Columns</Typography>\n          <Slider\n            value={props.gameState.board.width}\n            onChange={handleColumns}\n            aria-labelledby=\"columns-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            marks\n            min={2}\n            max={6}\n          />\n        </div>\n      </Popper>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { newBoard, solvedBoard, moveTile, getSolution } from \"./fifteen\";\nimport { Board } from \"./Board\";\nimport { Topbar } from \"./Topbar\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  CssBaseline,\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  Typography\n} from \"@material-ui/core\";\nimport { cyan } from \"@material-ui/core/colors\";\nimport \"typeface-russo-one\";\n\nconst App = () => {\n  const [gameState, setGameState] = useState({\n    board: solvedBoard(3, 3),\n    prevBoard: solvedBoard(3, 3),\n    moves: 0\n  });\n\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: cyan,\n      secondary: { main: \"#fffacd\" }\n    },\n    typography: {\n      fontFamily: [\"Russo One\", \"Sans Serif\"]\n    }\n  });\n\n  const resize = (width, height) => {\n    const newBoard = solvedBoard(width, height);\n    setGameState({ board: newBoard, prevBoard: newBoard, moves: 0 });\n  };\n\n  const move = id => {\n    setGameState({\n      prevBoard: gameState.board,\n      board: moveTile(gameState.board, id),\n      moves: gameState.moves + 1\n    });\n  };\n\n  const shuffle = () => {\n    const shuffledBoard = newBoard(\n      gameState.board.width,\n      gameState.board.height\n    );\n    setGameState({\n      prevBoard: shuffledBoard,\n      board: shuffledBoard,\n      moves: 0\n    });\n  };\n\n  const solutionReducer = (acc, id) => {\n    const prev = acc[acc.length - 1];\n    return acc.concat({\n      prevBoard: prev.board,\n      board: moveTile(prev.board, id),\n      moves: prev.moves + 1\n    });\n  };\n\n  const solve = () => {\n    const solution = getSolution(gameState.board);\n    if (solution.length === 0) alert(\"No solution found!\");\n    else\n      solution.reduce(solutionReducer, [gameState]).forEach((state, index) => {\n        setTimeout(() => setGameState(state), 150 * index);\n      });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Topbar gameState={gameState} resize={resize} />\n      <Container className=\"App\">\n        <Box m={4}>\n          <Typography variant=\"h2\" color=\"primary\">\n            Fifteen\n          </Typography>\n        </Box>\n        <Board\n          tileSize={100}\n          frameWidth={4}\n          gameState={gameState}\n          handler={move}\n        />\n        <Box m={4}>\n          <ButtonGroup>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={shuffle}\n            >\n              Shuffle\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={solve}\n            >\n              Solve\n            </Button>\n          </ButtonGroup>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}